[project]
name = "amazon-orders"
dynamic = ["version"]
description = "A Python libray (and CLI) for Amazon order history"
readme = "README.md"
license = "MIT"
authors = [{ name = "Alex Laird", email = "contact@alexlaird.com" }]
maintainers = [{ name = "Alex Laird", email = "contact@alexlaird.com" }]
requires-python = ">=3.9"
dependencies = [
    "click>=7.1",
    "requests>=2.23",
    "amazoncaptcha>=0.4",
    "beautifulsoup4>=4.12",
    "PyYAML>=5.1",
    "python-dateutil>=2.8",
    "pyotp>=2.9",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "coverage[toml]",
    "flake8",
    "flake8-pyproject",
    "pep8-naming",
    "responses",
    "lxml"
]
integration = [
    "pytest-rerunfailures",
    "parameterized"
]
docs = [
    "Sphinx",
    "sphinx-notfound-page",
    "sphinx_autodoc_typehints",
    "mypy",
    "types-requests",
    "types-beautifulsoup4",
    "types-Pillow",
    "types-PyYAML",
    "types-python-dateutil",
]

[project.scripts]
amazon-orders = "amazonorders.cli:amazon_orders_cli"

[project.urls]
Changelog = "https://github.com/alexdlaird/amazon-orders/blob/main/CHANGELOG.md"
Documentation = "https://amazon-orders.readthedocs.io"
Sponsor = "https://github.com/sponsors/alexdlaird"
"Source Code" = "https://github.com/alexdlaird/amazon-orders"

[tool.setuptools]
package-dir = { amazonorders = "amazonorders" }

[tool.setuptools.dynamic]
version = { attr = "amazonorders.__version__" }

[tool.pytest.ini_options]
junit_family = "legacy"
addopts = [
    "-s",
    "--ignore=venv",
    "--durations=0",
    "--durations-min=0.5",
    "--junitxml=build/test-results/junit.xml"
]

[tool.coverage.run]
omit = [
    "venv/**",
    "scripts/**",
    "*/tests/**"
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.coverage.xml]
output = "build/coverage/coverage.xml"

[tool.coverage.html]
title = "Coverage Report"
directory = "build/coverage"

[tool.flake8]
max-line-length = 119
statistics = true
exclude = "scripts/*,docs/*,venv/*,build/*,dist/*,.egg-info/*,.mypy_cache/*"

[[tool.mypy.overrides]]
module = "amazoncaptcha.*"
ignore_missing_imports = true
